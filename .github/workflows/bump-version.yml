name: Bump Version Number

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: master

      - name: Determine versions
        id: version
        run: |
          echo ::set-output name=node::$(node -p "require('./package.json').engines.node")
          echo ::set-output name=app_version::$(node -p "require('./package.json').version")

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.version.outputs.node }}

      - name: Set current version number
        if: steps.version.outputs.app_version != github.event.release.name
        id: set_current_version
        run: |
          npm version ${{ github.event.release.name }} --force --no-git-tag-version
          echo ::set-output name=version::$(node -p "require('./package.json').version")

      - name: Increment patch version
        id: increment_version
        run: |
          npm version patch --force --no-git-tag-version
          echo ::set-output name=version::$(node -p "require('./package.json').version")

      - name: GIT commit and push all changed files
        env: 
          CI_COMMIT_MESSAGE: Bump version to ${{ steps.increment_version.outputs.version }}
          CI_COMMIT_AUTHOR: Continuous Integration
        run: |
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config --global user.email "username@users.noreply.github.com"
          git commit -a -m "${{ env.CI_COMMIT_MESSAGE }}"
          git push
